///////////////////		 TEXT	 	////////////////////////////////
// calculates text color based on background color
.calc-text-color(@background-color) {
	& when (lightness(@background-color) > 50%) {
		color: @black;
	} & when  (lightness(@background-color) <= 50%) {
		color: @white;
	}
}

// calculates text color based on background color and adds opacity
.calc-text-color(@background-color, @fade) {
	& when (lightness(@background-color) > 50%) {
		color: @black;
		color: fade(@black, @fade);
	} & when (lightness(@background-color) <= 50%) {
		color: @white;
		color: fade(@white, @fade);
	}
}

// calcs text color and %rate of shading (lighten or darken)
.calc-text-by-value(@text-color, @degree-of-shading) {
	&  when (lightness(@text-color) > 50%) {
		color: darken(@text-color, @degree-of-shading);
	} &  when (lightness(@text-color) <= 50%) {
		color: lighten(@text-color, @degree-of-shading);
	}
}

// Calculates Placeholder Text Color
.calc-placeholder-color(@opacity, @background-color, @deg-change) {
	& when (lightness(@background-color) > 50%) {
		::-webkit-input-placeholder { /* WebKit browsers */
			.calc-text-color(darken(@background-color, @deg-change), @opacity);
		}
		:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
		   .calc-text-color(darken(@background-color, @deg-change), @opacity);
		}
		::-moz-placeholder { /* Mozilla Firefox 19+ */
		   .calc-text-color(darken(@background-color, @deg-change), @opacity);
		}
		:-ms-input-placeholder { /* Internet Explorer 10+ */
		   .calc-text-color(darken(@background-color, @deg-change), @opacity);
		}
	} & when (lightness(@background-color) <= 50%) {
		::-webkit-input-placeholder { /* WebKit browsers */
			.calc-text-color(lighten(@background-color, @deg-change), @opacity);
		}
		:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
		   .calc-text-color(lighten(@background-color, @deg-change), @opacity);
		}
		::-moz-placeholder { /* Mozilla Firefox 19+ */
		   .calc-text-color(lighten(@background-color, @deg-change), @opacity);
		}
		:-ms-input-placeholder { /* Internet Explorer 10+ */
		   .calc-text-color(lighten(@background-color, @deg-change), @opacity);
		}
	}
}



/////////////////		BACKGROUND STUFF	 	////////////////////
// calculates background color (to @black or @white) for child element
.calc-background-as-BW(@parents-background-color) {
	& when (lightness(@parents-background-color) > 50%){
		background-color: @black;
	} & when (lightness(@parents-background-color) <= 50%){
		background-color: @white;
	}
}

// calcs background color and %rate of shading (lighten or darken)
.calc-background-by-value(@parents-background-color,@degree-of-shading) {
	& when (lightness(@parents-background-color) > 50%) {
		background-color: darken(@parents-background-color, @degree-of-shading);
	} & when (lightness(@parents-background-color) <= 50%) {
		background-color: lighten(@parents-background-color, @degree-of-shading);
	}
}

// assigns background-image as well as background-size: cover
// ie8/9 compatible

///////////////		BACKGROUND COLOR AND TEXT COLOR	 	////////////
.calc-background-and-text-by-value(@parents-background-color,@degree-of-shading) {
	& when (lightness(@parents-background-color) > 50%) {
		background-color: darken(@parents-background-color, @degree-of-shading);
		.calc-text-color(darken(@parents-background-color, @degree-of-shading));
	} & when (lightness(@parents-background-color) <= 50%) {
		background-color: lighten(@parents-background-color, @degree-of-shading);
		.calc-text-color(lighten(@parents-background-color, @degree-of-shading));
	}
}

.calc-background-by-deg-and-text-with-fade(@parents-background-color,@degree-of-shading, @fade) {
	& when (lightness(@parents-background-color) > 50%) {
		background-color: darken(@parents-background-color, @degree-of-shading);
		.calc-text-color(darken(@parents-background-color, @degree-of-shading), @fade);
	} & when (lightness(@parents-background-color) <= 50%) {
		background-color: lighten(@parents-background-color, @degree-of-shading);
		.calc-text-color(lighten(@parents-background-color, @degree-of-shading), @fade);
	}
}

// calculates whether to darken/lighten background color by 6% based on parent's background color
.calc-background-lighten-or-darken(@parents-background-color) {
	& when (lightness(@parents-background-color) > 50%){
		background-color: darken(@parents-background-color, 6%);
		.calc-text-color(darken(@parents-background-color, 6%));
	} & when (lightness(@parents-background-color) <= 50%){
		background-color: lighten(@parents-background-color, 6%);
		.calc-text-color(lighten(@parents-background-color, 6%));
	}
}

// calculates whether to darken/lighten background color by 12% based on parent's background color
.calc-background-xtra-lighten-or-darken(@parents-background-color) {
	& when (lightness(@parents-background-color) > 50%){
		background-color: darken(@parents-background-color, 12%);
		.calc-text-color(darken(@parents-background-color, 12%));
	} & when (lightness(@parents-background-color) <= 50%){
		background-color: lighten(@parents-background-color, 12%);
		.calc-text-color(lighten(@parents-background-color, 12%));
	}
}

.gradient-simple-vertical(@top-bg, @bottom-bg) {
	background: @bottom-bg; /* Old browsers */ // color for text calculated against bottom color
	background: -moz-linear-gradient(top,  @top-bg 0%, @bottom-bg 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@top-bg), color-stop(100%,@bottom-bg)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  @top-bg 0%,@bottom-bg 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  @top-bg 0%,@bottom-bg 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  @top-bg 0%,@bottom-bg 100%); /* IE10+ */
	background: linear-gradient(to bottom,  @top-bg 0%,@bottom-bg 100%); /* W3C */
}

.gradient-two-tone-vertical(@top-bg, @bottom-bg) {
	background: @bottom-bg; /* Old browsers */
	background: -moz-linear-gradient(top,  @top-bg 0%, @top-bg 50%, @bottom-bg 50%, @bottom-bg 100%); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,@top-bg), color-stop(50%,@top-bg), color-stop(50%,@bottom-bg), color-stop(100%,@bottom-bg)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  @top-bg 0%,@top-bg 50%,@bottom-bg 50%,@bottom-bg 100%); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  @top-bg 0%,@top-bg 50%,@bottom-bg 50%,@bottom-bg 100%); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  @top-bg 0%,@top-bg 50%,@bottom-bg 50%,@bottom-bg 100%); /* IE10+ */
	background: linear-gradient(to bottom,  @top-bg 0%,@top-bg 50%,@bottom-bg 50%,@bottom-bg 100%); /* W3C */
}

///////////////////		BORDER STUFF	 	////////////////////////
// border mixin that calculates border color by 10% based on background color of the element
.calc-border-color(@background-color) {
	& when (lightness(@background-color) <= 50%) {
		border-color: (lighten(@background-color, 10%));
	} & when (lightness(@background-color) > 50%) {
		border-color: (darken(@background-color, 10%));
	}
}

// border mixin that calculates border color by value defined in second parameter based on background color of the element
.calc-border-color-by-value(@background-color, @degree-of-shading) {
	& when (lightness(@background-color) <= 50%) {
		border-color: lighten(@background-color, @degree-of-shading);
	} & when (lightness(@background-color) > 50%) {
		border-color: darken(@background-color, @degree-of-shading);
	}
}

// calculates text color based on background color
.calculate-border-color-as-BW(@background-color) {
	& when (lightness(@background-color) > 50%) {
		border-color: @black;
	} & when (lightness(@background-color) <= 50%) {
		border-color: @white;
	}
}

// calculates text color based on background color and adds fade
.calculate-border-color-as-BW(@background-color, @fade) {
	&  when (lightness(@background-color) > 50%) {
		border-color: @black;
		border-color: fade(@black, @fade);
	} & when (lightness(@background-color) <= 50%) {
		border-color: @white;
		border-color: fade(@white, @fade);
	}
}

// calculates border color, width and style
.calc-border(@width, @style, @background-color) {
	border-width: @width;
	border-style: @style;
	.calc-border-color(@background-color);
}

// calculates border color (with fade), width and style
.calc-border(@width, @style, @background-color, @fade) {
	border-width: @width;
	border-style: @style;
	.calc-border-color(@background-color, @fade);
}

// for hover and focus: calculates background color and adjusts text color if necessary
.calc-hover-color(@background-color) {
	& when (lightness(@background-color) <= 50%) {
		@new-background-color: lighten(@background-color, 6%);
		&:hover, &:active, &:focus {
			background-color: @new-background-color;
			.calc-text-color(@new-background-color);
		}
	} & when (lightness(@background-color) > 50%) {
		@new-background-color: darken(@background-color, 6%);
		&:hover, &:active, &:focus {
			background-color: @new-background-color;
			.calc-text-color(@new-background-color);
		}
	}
}

// border-radius with vendor prefixes
.border-radius(@i) {
	-webkit-border-radius: @i;
	-moz-border-radius: @i;
	border-radius: @i;
}

////////////
// iFrame //
////////////

.responsive-iframe(@width, @height){
    position: relative;
    padding-bottom: 100% * (@height/@width);
    height: 0;
    overflow: hidden;

    iframe{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

// various layout mixins //
.fit-to-container-edge(@side) {
	@media (min-width: @screen-sm-min) {
		margin-@{side}: 50%;
		@{side}: -720px / 2;
	}

	@media (min-width: @screen-md-min) {
		@{side}: -940px / 2;
	}

	@media (min-width: @screen-lg-min) {
		@{side}: -1140px / 2;
	}

	@media (min-width: @screen-xl-min) {
		@{side}: -1500px / 2;
	}
}

////////////// Alignment/Layout stylers ///////////////////
.ul-zero-out() {
	margin:0;
	padding:0;
	list-style: none;
}

//general element normalizer
.elem-zero-out {
   margin: 0;
   padding: 0;
   font-size: inherit;
   color: inherit;
}

.calculate-aspect-ratio(@aspect-ratio) {
   &:before {
      content:"";
      position: relative;
      display: block;
      padding-top: @aspect-ratio;
   }
}

// assigns vertical align to immediate children
.vertical-align-children(@align) {
	display: table;
	width: 100%;
	height: auto;

	> * {
		display: table-cell;
		vertical-align: @align;
	}
}